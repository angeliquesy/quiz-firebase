{"ast":null,"code":"import _toConsumableArray from \"D:\\\\work\\\\git\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\work\\\\git\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\work\\\\git\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\work\\\\git\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:\\\\work\\\\git\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\work\\\\git\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\work\\\\git\\\\react\\\\src\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport Car from './Car/Car';\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\nimport Counter from \"./Counter/Counter\";\nvar ClickedContext = React.createContext(false);\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props); // т.к Component имеет свои пропс, нужно их наследовать\n\n    _this.onChangeName = function (name, index) {\n      var car = _this.state.cars[index];\n      car.name = name;\n\n      var cars = _toConsumableArray(_this.state.cars); // const cars = this.state.cars.concat() // клонирование массива - старый способ\n\n\n      cars[index] = car;\n\n      _this.setState({\n        cars: cars\n      }); // = cars: cars\n      // когда меняем состояние, должны создавать клон и новый стейт, т.к. не можем напрямую менять состояние\n\n    };\n\n    _this.toggleCarsHandler = function () {\n      _this.setState({\n        showCars: !_this.state.showCars\n      });\n    };\n\n    _this.state = {\n      clicked: false,\n      cars: [{\n        name: 'Ford',\n        year: 2018\n      }, {\n        name: 'Audi',\n        year: 2016\n      }, {\n        name: 'Mazda',\n        year: 2010\n      }],\n      pageTitle: 'React components',\n      showCars: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"deleteHandler\",\n    value: function deleteHandler(index) {\n      var cars = this.state.cars.concat();\n      cars.splice(index, 1);\n      this.setState({\n        cars: cars\n      });\n    }\n  }, {\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      console.log('App componentWillMount');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('App componentDidMount');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('App render');\n      var divStyle = {\n        textAlign: 'center'\n      };\n      var cars = null;\n\n      if (this.state.showCars) {\n        cars = this.state.cars.map(function (car, index) {\n          return /*#__PURE__*/React.createElement(ErrorBoundary, {\n            key: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(Car, {\n            name: car.name,\n            year: car.year,\n            index: index,\n            onDelete: _this2.deleteHandler.bind(_this2, index),\n            onChangeName: function onChangeName(event) {\n              return _this2.onChangeName(event.target.value, index);\n            } // лучший способ (оптимизация): onChangeTitle={this.changeTitleHandler.bind(this, car.name)}\n            ,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }\n          }));\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        style: divStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, this.state.pageTitle), /*#__PURE__*/React.createElement(Counter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleCarsHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, \"ToggleCars\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            clicked: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, \"Change click\"), cars);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:/work/git/react/src/App.js"],"names":["React","Component","Car","ErrorBoundary","Counter","ClickedContext","createContext","App","props","onChangeName","name","index","car","state","cars","setState","toggleCarsHandler","showCars","clicked","year","pageTitle","concat","splice","console","log","divStyle","textAlign","map","deleteHandler","bind","event","target","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Car from './Car/Car'\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\nimport Counter from \"./Counter/Counter\";\n\nconst ClickedContext = React.createContext(false)\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props) // т.к Component имеет свои пропс, нужно их наследовать\n\n    this.state = {\n      clicked: false,\n      cars: [\n        {\n          name: 'Ford',\n          year: 2018\n        },\n        {\n          name: 'Audi',\n          year: 2016\n        },\n        {\n          name: 'Mazda',\n          year: 2010\n        },\n      ],\n      pageTitle: 'React components',\n      showCars: false\n    }\n  }\n\n  onChangeName = (name, index) => {\n    const car = this.state.cars[index]\n    car.name = name\n    const cars = [...this.state.cars]\n    // const cars = this.state.cars.concat() // клонирование массива - старый способ\n    cars[index] = car\n    this.setState({cars}) // = cars: cars\n\n    // когда меняем состояние, должны создавать клон и новый стейт, т.к. не можем напрямую менять состояние\n  }\n\n  toggleCarsHandler = () => {\n    this.setState({\n      showCars: !this.state.showCars\n    })\n  }\n\n  deleteHandler(index) {\n    const cars = this.state.cars.concat()\n    cars.splice(index, 1)\n\n    this.setState({cars})\n  }\n\n  UNSAFE_componentWillMount() {\n    console.log('App componentWillMount')\n  }\n\n  componentDidMount() {\n    console.log('App componentDidMount')\n  }\n\n  render() {\n    console.log('App render')\n\n    const divStyle = {\n      textAlign: 'center',\n    }\n\n    let cars = null\n\n    if (this.state.showCars) {\n      cars = this.state.cars.map((car, index) => {\n        return (\n          <ErrorBoundary key={index}>\n            <Car\n              name={car.name}\n              year={car.year}\n              index={index}\n              onDelete={this.deleteHandler.bind(this, index)}\n              onChangeName={event => this.onChangeName(event.target.value, index)}\n              // лучший способ (оптимизация): onChangeTitle={this.changeTitleHandler.bind(this, car.name)}\n            />\n          </ErrorBoundary>\n        )\n      })\n    }\n\n    return (\n      <div className='App' style={divStyle}>\n        <h1>{this.state.pageTitle}</h1>\n\n        <Counter/>\n\n        <hr/>\n\n        <button onClick={this.toggleCarsHandler}>\n          ToggleCars\n        </button>\n\n        <button onClick={() => this.setState({clicked: true})}>\n          Change click\n        </button>\n\n        {cars}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}